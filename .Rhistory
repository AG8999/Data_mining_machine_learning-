source("D:/DML/DML/code/KNN_RANDOMFOREST.R")
data2 <- read.csv("Datasets/healthcare_dataset.csv")
data2 <- read.csv("Datasets/healthcare_dataset.csv")
summary(data2)
############# INSTALLING and IMPORTING PACKAGES ################################
#install.packages(c('car', 'gplots', 'performance','tidyverse','caret','tidyverse','readxl','ggplot2','corrplot','purrr','usdm','skimr'))
library(car)
library(gplots)
library(performance)
library(tidyverse)
library(caret)
library(readxl)
library(ggplot2)
library(corrplot)
library(purrr)
library(skimr)
library(usdm)
options(warn = -1)
################ IMPORTNG CSV FILE #######################
data2 <- read.csv("Datasets/healthcare_dataset.csv")
################ EXPLORATORY DATA ANALYSIS (EDA) PHASE #######################
summary(data2)
str(data2)
skimmed_data <- skim_to_wide(data2)
(skimmed_data)
data2$Patient_ID <- NULL
# Checking missing values
result <- colSums(is.na(data2))
# Create a data frame
result_df <- data.frame(Column = names(result), NA_Count = result)
# Print the data frame
print(result_df)
################ DATA PRE-PROCESSING PHASE #######################
#Checking for unique values in each column
data2%>%summarise_all(funs(n_distinct))
data2 <- tidyr::separate(data2, Blood_Pressure..mmHg., into = c("Systolic", "Diastolic"), sep = "/" , convert = T)
# Histograms for numerical variables
data2 %>% select(Height..cm., Weight..kg., BMI, Temperature..C., Heart_Rate..bpm.,Age,Systolic,Diastolic) %>%
map(~histogram(~., data = data2, main = paste("Histogram of", substitute(~.), sep = " ")))
# Bar plot for Gender and Blood_Type
data2 %>% ggplot(aes(x = Gender)) + geom_bar()
data2 %>% ggplot(aes(x = Blood_Type)) + geom_bar()
# Histograms for numeric variables
data2 %>%
select(Age, Height..cm., Weight..kg., BMI, Temperature..C.,Heart_Rate..bpm.,Systolic,Diastolic) %>%
gather() %>%
ggplot(aes(x = value)) +
geom_histogram(binwidth = 1, fill = "darkred", color = "black") +
facet_wrap(~key, scales = "free") +
labs(title = "Histograms of Numeric Variables")
# Bar plots for categorical variables
data2 %>%
select(Gender,Blood_Type) %>%
gather() %>%
ggplot(aes(x = factor(value))) +
geom_bar(fill = "darkred", color = "black") +
facet_wrap(~key) +
labs(title = "Bar Plots of Categorical Variables")
# Perform one-hot encoding
dummies <- data2[,c("Gender","Blood_Type")]
encoded_data <- model.matrix(~ . - 1, dummies)
data2 <- cbind(data2, encoded_data)
data2$Gender <- NULL
data2$Blood_Type <- NULL
colnames(data2)
############## Correlation Analysis#######################################
cor_matrix <- cor(data2[, c("Age", "Height..cm.", "Weight..kg.", "Temperature..C.","Heart_Rate..bpm.","Systolic","Diastolic")])
print(cor_matrix)
corrplot(cor_matrix,  method = 'circle', type = 'lower', insig='blank',
addCoef.col ='black', number.cex = 0.6, order = 'AOE', diag=FALSE)
############## CHECK MULTICOLLINEARITY ##################################
vif <- usdm::vif(data2[,c(1,2,3,6:9,12:15)])
print(vif)
####################### DATA TRANSFORMATION ################################
preProcessSteps_data <- c("nzv","center", "scale")
preprocessed_data <- preProcess(data2, method = preProcessSteps_data)
scaled_data <- predict(preprocessed_data, newdata = data2)
##################Box Plots and Outliers ##########################################
# Boxplots for numerical variables
data2 %>% gather(key = "Variable", value = "Value", c(Age, Height..cm., Weight..kg., BMI, Temperature..C.,Heart_Rate..bpm.,Systolic,Diastolic)) %>%
ggplot(aes(x = Variable, y = Value)) + geom_boxplot()
####################  SPLIT DATA INTO TRAIN AND TEST DATA ########################
# create training set indices with 80% of data
set.seed(23106786)
# Create index for testing and training data
inTrain <- createDataPartition(y = scaled_data$BMI,
p = 0.8, list = FALSE)
# subset data to training
training <- scaled_data[inTrain,]
# subset data to test
testing <- scaled_data[-inTrain,]
# Size ratio of training and test data set
rbind("Training set" = nrow(training)/nrow(scaled_data),
"Testing set" = nrow(testing)/nrow(scaled_data)) %>%
round(2)*100
# Fit multiple-linear regression model
my_lm <- train(training[, c("Age", "Height..cm.", "Weight..kg.", "Temperature..C.", "Heart_Rate..bpm.", "Systolic", "Diastolic", "GenderFemale", "GenderMale", "Blood_TypeA+", "Blood_TypeAB-", "Blood_TypeAB+", "Blood_TypeB-", "Blood_TypeB+")],
training[,"BMI"],
method = "lm",
)
message("Linear Regression: Model performance on \n the training set")
my_lm$results[c("RMSE","Rsquared")] %>%
round(2)
summary(my_lm)
pred <- predict(my_lm, testing[, c("Age", "Height..cm.", "Weight..kg.", "Temperature..C.", "Heart_Rate..bpm.", "Systolic", "Diastolic", "GenderFemale", "GenderMale", "Blood_TypeA+", "Blood_TypeAB-", "Blood_TypeAB+", "Blood_TypeB-", "Blood_TypeB+")])
# sum of squared errors
SSE <- sum((testing[,"BMI"] -pred)^2)
# total sum of squares
SST <- sum((testing[,"BMI"] - mean(training[,"BMI"]))^2)
R_square <- 1 - SSE/SST
message('R_squared on the test data:')
round(R_square, 2)
SSE <- sum((testing[,"BMI"] - pred)^2)
RMSE <- sqrt(SSE/length(pred))
message("Root mean square error on the test data: ")
round(RMSE, 2)
my_data <- as.data.frame(cbind(predicted = pred,
observed = testing$BMI))
# Plot predictions vs test data
ggplot(my_data,aes(predicted, observed)) +
geom_point(color = "darkred", alpha = 0.5) +
geom_smooth(method=lm)+ ggtitle('Linear Regression ') +
ggtitle("Multiple Linear Regression: Prediction vs Test Data") +
xlab("Predecited BMI ") +
ylab("Observed BMI ") +
theme(plot.title = element_text(color="darkgreen",size=18,hjust = 0.8),
axis.text.y = element_text(size=12),
axis.text.x = element_text(size=12,hjust=.5),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14))
sky <- read.csv("Datasets/Skyserver.csv")
#Checking the data and types
glimpse(sky)
#Checking for NA values, and there are none.
colSums(is.na(sky))
data <- read.csv("Datasets/heart_attack_predict.csv")
summary(data)
